package _31_整数中1出现的次数;

/**
 * 求出1~13的整数中1出现的次数,并算出100~1300的整数中1出现的次数？
 * 为此他特别数了一下1~13中包含1的数字有1、10、11、12、13。
 * 因此共出现6次,但是对于后面问题他就没辙了。
 * ACMer希望你们帮帮他,并把问题更加普遍化,可以很快的求出任意非负整数区间中1出现的次数（从1 到 n 中1出现的次数）。
 */
public class Solution {
    public int NumberOf1Between1AndN_Solution(int n) {
        int count = 0;
        int i = 1;

        // 遍历个十百千...到n的最高位
        for (i = 1;i <= n;i = i*10){
            // 将n分割为低位b和高位a
            int a = n / i;
            int b = n % i;

            /**
             * 当i表示百位，则百位为1时能组成的数字有（高位 * 低位）个，
             * 如 31256，百位为1时，高位有种32（0-31），低位有100种（0-99），故一共为32*100种
             * 虽然011在个位和十位时都记录了，但是因为求的是1的个数，所以本来就应该记录2次
             *
             * 而在百位恰好为1或者为0时，情况有所不同，所以要进行判断
             * 为31056时，高位的组合要少1，只有31种；为31156时，高位为31时，低位只有57种组合。
             */
            if(a%10 >= 2)
                count += (a / 10 + 1) * i;
            else if (a % 10 == 1)
                count += (a / 10) * i + b+1;
            else
                count += (a / 10) * i;
        }

        return count;
    }
}